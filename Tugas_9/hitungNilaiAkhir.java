/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pertemuan9;

/**
 *
 * @author afifa
 */
import javax.swing.JOptionPane; // Mengimpor kelas JOptionPane untuk menampilkan dialog pesan
import javax.swing.table.DefaultTableModel; // Mengimpor kelas DefaultTableModel untuk mengelola model tabel


public class hitungNilaiAkhir extends javax.swing.JFrame { // Kelas utama untuk menghitung nilai akhir
    private DefaultTableModel modelmahasiswa; // membuat model untuk tabel yang menampilkan data mahasiswa
    private inputDataMhs dataMhs; // Objek untuk menyimpan data mahasiswa
    
    public hitungNilaiAkhir(){ // membuat konstruktor kelas, di sini kita inisialisasi komponen GUI dan dataMhs
        initComponents(); // Inisialisasi komponen GUI
        dataMhs = new inputDataMhs(); // Membuat objek dataMhs baru untuk menyimpan data
        viewDataTable(); // Memanggil metode untuk menampilkan data di tabel
    }
    
    public final void viewDataTable(){ // Metode untuk menampilkan data mahasiswa di tabel
        String[] namaKolom = {"NIM","Nama","Alamat","Mata Kuliah","Nilai Akhir"};
        Object[][] objekmahasiswa = new Object[dataMhs.getALL().size()][5]; // Membuat objek 2D untuk menampung data mahasiswa
        int i = 0; // Indeks untuk iterasi
        for (mahasiswa mhs:dataMhs.getALL()){ // Mengisi objekmahasiswa dengan data dari dataMhs
            Object arrayMahasiswa[]={ // Array untuk menyimpan data mahasiswa
                mhs.getNim(), // Mendapatkan NIM
                mhs.getNama(), // Mendapatkan Nama
                mhs.getAlamat(), // Mendapatkan Alamat
                mhs.getMataKuliah(), // Mendapatkan Mata Kuliah
                String.format("%.2f", mhs.getNilaiAkhir()) // Mendapatkan Nilai Akhir dengan format dua desimal
            };
            objekmahasiswa[i]=arrayMahasiswa; // Mengisi objekmahasiswa dengan data mahasiswa
            i++; //increment index
        }
        modelmahasiswa = new DefaultTableModel(objekmahasiswa, namaKolom); // Membuat model tabel dengan data mahasiswa dan nama kolom
        tableData.setModel(modelmahasiswa); // Mengatur model tabel ke tabel yang ditampilkan
    }   
    
    /**
     * Creates new form HitungNilaiAkhir
     */
  
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nim = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        alamat = new javax.swing.JTextField();
        mk = new javax.swing.JTextField();
        nilai1 = new javax.swing.JTextField();
        nilai2 = new javax.swing.JTextField();
        tampilNilaiAkhir = new javax.swing.JTextField();
        nilai3 = new javax.swing.JTextField();
        bSimpan = new javax.swing.JButton();
        bClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        bHapus = new javax.swing.JButton();
        nilai4 = new javax.swing.JTextField();
        nilai5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Hitung Nilai Akhir Mhs");
        setBackground(new java.awt.Color(255, 204, 204));
        setLocationByPlatform(true);

        jLabel1.setText("Nilai 1 [10%]");

        jLabel2.setText("Nama");

        jLabel3.setText("Alamat");

        jLabel4.setText("Mata Kuliah");

        jLabel5.setText("NIM");

        jLabel6.setText("Nilai 2 [15%]");

        jLabel7.setText("Nilai 3 (UTS) [25%]");

        jLabel8.setText("Nilai 4 [15%]");

        jLabel9.setText("Nilai 5 [35%]");

        jLabel10.setText("Nilai Akhir");

        nim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nimActionPerformed(evt);
            }
        });

        alamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alamatActionPerformed(evt);
            }
        });

        mk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mkActionPerformed(evt);
            }
        });

        tampilNilaiAkhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tampilNilaiAkhirActionPerformed(evt);
            }
        });

        bSimpan.setText("Simpan");
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });

        bClear.setText("Clear");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NIM", "Nama", "Alamat", "Mata Kuliah", "Nilai Akhir"
            }
        ));
        tableData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableData.setAutoscrolls(false);
        tableData.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableData.setShowGrid(true);
        jScrollPane1.setViewportView(tableData);

        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(alamat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nim, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bClear)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6))
                            .addGap(40, 40, 40))
                        .addComponent(jLabel7))
                    .addComponent(jLabel10))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nilai2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(tampilNilaiAkhir, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(nilai3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(nilai1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(nilai4, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(nilai5, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addGap(101, 101, 101))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nilai3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nilai4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nilai5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tampilNilaiAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(nim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nilai1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nilai2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8)
                            .addComponent(mk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bClear)
                                    .addComponent(bHapus)
                                    .addComponent(bSimpan))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
        
        // Mengambil data dari JTextField
        String nim = this.nim.getText();
        String nama = this.nama.getText();
        String alamat = this.alamat.getText();
        String mk = this.mk.getText();

        // Ambil nilai dari text field
        String[] nilaiTextFields = {this.nilai1.getText(), this.nilai2.getText(), 
                                     this.nilai3.getText(), this.nilai4.getText(), 
                                     this.nilai5.getText()}; // Mengambil semua nilai dari field input

        // Validasi jika semua field kosong
        boolean semuaFieldKosong = nim.isEmpty() && nama.isEmpty() && alamat.isEmpty() && mk.isEmpty();
        for (String nilai : nilaiTextFields) {
            if (semuaFieldKosong) { // Jika semua field kosong, tampilkan pesan kesalahan
            JOptionPane.showMessageDialog(this, "Semua input tidak boleh kosong.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Menghentikan eksekusi lebih lanjut
        }else if (!nilai.isEmpty()) {
                semuaFieldKosong = false; // Jika ada satu nilai yang diisi, set menjadi false
                break; // Keluar dari loop jika menemukan nilai yang diisi
            }
        }

        // Validasi jika ada field yang kosong
        if (nim.isEmpty() || nama.isEmpty() || alamat.isEmpty() || mk.isEmpty()) { // Menampilkan pesan jika NIM, Nama, Alamat, atau MK kosong
            JOptionPane.showMessageDialog(this, "NIM, Nama, Alamat, dan Mata Kuliah tidak boleh kosong.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Menghentikan eksekusi lebih lanjut
        }

        // Variabel untuk menyimpan nilai
        double[] nilai = new double[5]; // Array untuk menyimpan nilai dari input
        boolean adaNilaiKosong = false; // boolean jika ada nilai yang kosong
        boolean nilaiLebihDari100 = false; // boolean jika ada nilai yang lebih dari 100

        // Loop untuk memeriksa setiap nilai
        for (int i = 0; i < nilaiTextFields.length; i++) {
            if (nilaiTextFields[i].isEmpty()) {
                adaNilaiKosong = true; // Tandai jika ada nilai yang kosong
                JOptionPane.showMessageDialog(this, "Ada field nilai yang kosong.", "Input Warning", JOptionPane.WARNING_MESSAGE);
                return; // Menghentikan eksekusi lebih lanjut
            } else {
                try {
                    nilai[i] = Double.parseDouble(nilaiTextFields[i]);
                    if (nilai[i] > 100) {
                        nilaiLebihDari100 = true; // Tandai jika ada nilai lebih dari 100, boolean menjadi true
                        JOptionPane.showMessageDialog(this, "Semua nilai tidak boleh lebih dari 100.", "Input Error", JOptionPane.ERROR_MESSAGE); //maka akan tampil pesan
                        return; // Menghentikan eksekusi lebih lanjut
                    }
                } catch (NumberFormatException e) {
                    // Tangani kesalahan jika input tidak dapat dikonversi ke double, atau input berapa huruf
                    JOptionPane.showMessageDialog(this, "Nilai harus berupa angka.", "Input Error", JOptionPane.ERROR_MESSAGE); //maka akan tampil pesan
                    return; // Menghentikan eksekusi lebih lanjut
                }
            }
        }

        // Semua validasi berhasil, sekarang hitung nilai akhir dan masukkan data
        double nilaiAkhir = perhitunganNilai.hitungNilaiAkhir(nilai[0], nilai[1], nilai[2], nilai[3], nilai[4]);

        // Tampilkan nilai akhir
        this.tampilNilaiAkhir.setText(String.format("%.2f", nilaiAkhir)); // Mengatur teks untuk menampilkan nilai akhir dengan format dua desimal

        // Tambahkan data mahasiswa ke tabel
        dataMhs.insertData(nim, nama, alamat, mk, nilaiAkhir); // Memasukkan data mahasiswa ke dalam objek dataMhs
        viewDataTable(); // Perbarui tampilan tabel
        
    }//GEN-LAST:event_bSimpanActionPerformed

    private void alamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alamatActionPerformed

    private void nimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nimActionPerformed

    private void mkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mkActionPerformed

    // Mengosongkan semua JTextField, untuk dibersihkan
    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        nim.setText("");
        nama.setText("");
        alamat.setText("");
        mk.setText("");
        nilai1.setText("");
        nilai2.setText("");
        nilai3.setText("");
        nilai4.setText("");
        nilai5.setText("");
        tampilNilaiAkhir.setText("");
    }//GEN-LAST:event_bClearActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        // Mendapatkan indeks baris yang dipilih
    int[] selectedRows = tableData.getSelectedRows();// Mengambil indeks dari baris yang dipilih di tabel

    // Mengecek apakah ada baris yang dipilih
    if (selectedRows.length > 0) {
        // Menghapus data pada indeks yang sesuai di ArrayList
        for (int i = selectedRows.length - 1; i >= 0; i--) {
            dataMhs.deleteData(selectedRows[i]); // Menghapus data berdasarkan indeks yang dipilih
        }
        
        // Perbarui tampilan tabel setelah data dihapus
        viewDataTable();
    } else {
        // Tampilkan pesan jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Error", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_bHapusActionPerformed

    private void tampilNilaiAkhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tampilNilaiAkhirActionPerformed
    
    }//GEN-LAST:event_tampilNilaiAkhirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hitungNilaiAkhir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hitungNilaiAkhir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hitungNilaiAkhir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hitungNilaiAkhir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hitungNilaiAkhir().setVisible(true); //jendela GUI akan ditampilkan kepada pengguna.
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamat;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mk;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField nilai1;
    private javax.swing.JTextField nilai2;
    private javax.swing.JTextField nilai3;
    private javax.swing.JTextField nilai4;
    private javax.swing.JTextField nilai5;
    private javax.swing.JTextField nim;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField tampilNilaiAkhir;
    // End of variables declaration//GEN-END:variables
}
